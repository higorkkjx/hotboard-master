<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>WhatsApp Chat</title>
    <style>
        body {
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
    background-color: #f0f0f0;
}

.container {
    width: 100%;
    max-width: 600px;
    margin: 0 auto;
    padding: 20px;
}

#search-input {
    width: calc(100% - 40px);
    padding: 10px;
    margin-bottom: 20px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.contact-list {
    list-style: none;
    padding: 0;
}

.contact-list li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 10px;
    margin: 5px 0;
    background-color: #fff;
    border-radius: 5px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    max-width: 90%;
    margin-left: auto;
    margin-right: auto;
}

.contact-list li .name {
    font-size: 16px;
}

.contact-list li button {
    background-color: #25d366;
    color: #fff;
    border: none;
    padding: 8px 12px;
    border-radius: 5px;
    cursor: pointer;
}

.contact-list li button:hover {
    background-color: #1ebe5b;
}

.popup {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    justify-content: center;
    align-items: center;
}

.popup-content {
    background-color: #fff;
    padding: 20px;
    border-radius: 5px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    text-align: center;
    position: relative;
    width: 90%;
    max-width: 400px;
}

.popup-content h1, .popup-content h2 {
    margin-bottom: 20px;
}

#profile-img {
    width: 40%;
    height: auto;
    border-radius: 50%;
    margin-bottom: 20px;
}

.input-group {
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 10px;
}

.input-group input[type="text"], .input-group input[type="number"], .input-group input[type="file"] {
    width: 70%;
    padding: 10px;
    margin-right: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
}

.input-group button {
    background-color: #25d366;
    color: #fff;
    border: none;
    padding: 10px;
    border-radius: 5px;
    cursor: pointer;
}

.input-group button:hover {
    background-color: #1ebe5b;
}

.close-btn {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 20px;
    cursor: pointer;
}

    </style>
</head>
<body>
    <div class="container">
        <input type="text" id="search-input" placeholder="Pesquisar contatos...">
        <ul class="contact-list">
            <!-- Os contatos serão inseridos aqui pelo JavaScript -->
        </ul>
    </div>

    <div id="chat-popup" class="popup">
        <div class="popup-content">
            <span class="close-btn">&times;</span>
            <img id="profile-img" src="" alt="Profile Image">
            <h1>Enviar Mensagem</h1>
            
            <div class="input-group">
                <input type="text" id="message-input" placeholder="Digite sua mensagem...">
            </div>
            
            <div class="input-group">
              
                <input type="number" id="delay-input" placeholder="Digite o tempo para enviar mensagem" value="0">
                <button id="send-btn">Enviar &#10148;</button>
            </div>
            
            <h2>Enviar Áudio</h2>
            <div class="input-group">
                <input type="file" id="audio-input" accept="audio/*">
            </div>
            <div class="input-group">

                <input type="number" id="audio-delay-input" placeholder="Digite o tempo de espera" value="0">
                <button id="send-audio-btn">Enviar Áudio &#10148;</button>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async() => {

            const contactsResponse = await fetch(`https://hotboard.online/misc/contacts?key=` + '<%= chave %>');
    const contactsData = await contactsResponse.json();


    const contactsResponse1 = await fetch(`https://hotboard.online/mensagens`);
    const contactsData1 = await contactsResponse1.json();

    let contacts = contactsData1.chatIds

    for (num of contactsData.data.contacts) {
        contacts.push(num)
    }
    
           
       

console.log(contacts)
    const contactList = document.querySelector('.contact-list');
    const searchInput = document.getElementById('search-input');
    const chatPopup = document.getElementById('chat-popup');
    const closeBtn = document.querySelector('.close-btn');
    const profileImg = document.getElementById('profile-img');
    const messageInput = document.getElementById('message-input');
    const delayInput = document.getElementById('delay-input');
    const sendBtn = document.getElementById('send-btn');
    const audioInput = document.getElementById('audio-input');
    const audioDelayInput = document.getElementById('audio-delay-input');
    const sendAudioBtn = document.getElementById('send-audio-btn');
    let currentContactId = '';

    async function fetchProfileImage(contactId) {
        let profileImageUrl = 'https://cdn.icon-icons.com/icons2/1141/PNG/512/1486395884-account_80606.png';
        const numerorefatorado = contactId.split("@")[0];

        try {
            const profileResponse = await fetch('https://hotboard.online/misc/downProfile?key=' + '<%= chave %>', {
                method: 'POST',
                body: JSON.stringify({ id: numerorefatorado }),
                headers: { 'Content-Type': 'application/json' }
            });
            const profileData = await profileResponse.json();

            if (profileData.error === false) {
                profileImageUrl = profileData.data;
            }
        } catch (error) {
            console.error('Erro ao buscar a imagem de perfil:', error);
        }

        profileImg.src = profileImageUrl;
    }

    function renderContacts(filter = '') {
        contactList.innerHTML = '';
        contacts.filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))
            .forEach(contact => {
                const li = document.createElement('li');
                li.innerHTML = `
                    <span class="name">${contact.name}</span>
                    <button class="chat-btn" data-id="${contact.id}">chat</button>
                `;
                contactList.appendChild(li);

                const chatBtn = li.querySelector('.chat-btn');
                chatBtn.addEventListener('click', () => {
                    chatPopup.style.display = 'flex';
                    currentContactId = contact.id;
                    fetchProfileImage(contact.id);
                });
            });
    }

    function renderContacts2(filter = '') {
        contactList.innerHTML = '';
        contacts2.filter(contact => contact.includes(filter.toLowerCase()))
            .forEach(contact => {
                const li = document.createElement('li');
                li.innerHTML = `
                    <span class="name">${contact}</span>
                    <button class="chat-btn" data-id="${contact}">chat</button>
                `;
                contactList.appendChild(li);

                const chatBtn = li.querySelector('.chat-btn');
                chatBtn.addEventListener('click', () => {
                    chatPopup.style.display = 'flex';
                    currentContactId = contact.id;
                    fetchProfileImage(contact.id);
                });
            });
    }


    searchInput.addEventListener('input', () => {
        const filter = searchInput.value;
        renderContacts(filter);

        const firstMatch = document.querySelector('.contact-list li');
        if (firstMatch) {
            firstMatch.scrollIntoView({ behavior: 'smooth' });
        }
    });

    closeBtn.addEventListener('click', () => {
        chatPopup.style.display = 'none';
    });

    window.addEventListener('click', (event) => {
        if (event.target === chatPopup) {
            chatPopup.style.display = 'none';
        }
    });

    sendBtn.addEventListener('click', async () => {
        const message = messageInput.value;
        const delay = delayInput.value;

        if (message.trim() === '') {
            alert('Digite uma mensagem.');
            return;
        }

        const payload = {
            id: currentContactId,
            typeId: "user",
            message: message,
            options: {
                delay: parseInt(delay),
                replyFrom: ""
            },
            groupOptions: {
                markUser: "ghostMention"
            }
        };

        try {
            const response = await fetch('/message/text?key=' + '<%= chave %>', {
                method: 'POST',
                body: JSON.stringify(payload),
                headers: { 'Content-Type': 'application/json' }
            });

            const result = await response.json();
            console.log(result);

            if (result.error) {
                alert('Erro ao enviar mensagem: ' + result.message);
            } else {
                alert('Mensagem enviada com sucesso.');
            }
        } catch (error) {
            console.error('Erro ao enviar mensagem:', error);
            alert('Erro ao enviar mensagem.');
        }
    });

    sendAudioBtn.addEventListener('click', async () => {
        const audioFile = audioInput.files[0];
        const delay = audioDelayInput.value;

        if (!audioFile) {
            alert('Selecione um arquivo de áudio.');
            return;
        }

        const formData = new FormData();
        formData.append('file', audioFile);
        formData.append('id', currentContactId);
        formData.append('userType', 'user');
        formData.append('delay', parseInt(delay));

        try {
            const response = await fetch('/message/audiofile?key=' + '<%= chave %>', {
                method: 'POST',
                body: formData
            });

            const result = await response.json();
            console.log(result);

            if (result.error) {
                alert('Erro ao enviar áudio: ' + result.message);
            } else {
                alert('Áudio enviado com sucesso.');
            }
        } catch (error) {
            console.error('Erro ao enviar áudio:', error);
            alert('Erro ao enviar áudio.');
        }
    });

    renderContacts();

});

    </script>
</body>
</html>
